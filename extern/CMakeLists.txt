cmake_minimum_required(VERSION 3.10)

include(ExternalProject)

if (MSVC)

    # cache things to speed up windows build
    set(LWS_HAVE_FORK 0 CACHE INTERNAL "")
    set(LWS_HAVE_GETENV 1 CACHE INTERNAL "")
    set(LWS_HAVE_MALLOC 1 CACHE INTERNAL "")
    set(LWS_HAVE_MEMSET 1 CACHE INTERNAL "")
    set(LWS_HAVE_REALLOC 1 CACHE INTERNAL "")
    set(LWS_HAVE_SOCKET 0 CACHE INTERNAL "")
    set(LWS_HAVE_STRERROR 1 CACHE INTERNAL "")
    set(LWS_HAVE_VFORK 0 CACHE INTERNAL "")
    set(LWS_HAVE_EXECVPE 1 CACHE INTERNAL "")
    set(LWS_HAVE_GETIFADDRS 0 CACHE INTERNAL "")
    set(LWS_HAVE_SNPRINTF 0 CACHE INTERNAL "")
    set(LWS_HAVE__SNPRINTF 0 CACHE INTERNAL "")
    set(LWS_HAVE__VSNPRINTF 0 CACHE INTERNAL "")
    set(LWS_HAVE_GETLOADAVG 0 CACHE INTERNAL "")
    set(LWS_HAVE_ATOLL 1 CACHE INTERNAL "")
    set(LWS_HAVE__ATOI64 1 CACHE INTERNAL "")
    set(LWS_HAVE__STAT32I64 1 CACHE INTERNAL "")
    set(LWS_HAVE_CLOCK_GETTIME 0 CACHE INTERNAL "")
    set(LWS_HAVE_LOCALTIME_R 0 CACHE INTERNAL "")
    set(LWS_HAVE_GMTIME_R 0 CACHE INTERNAL "")
    set(LWS_HAVE_CTIME_R 0 CACHE INTERNAL "")
    set(LWS_HAVE_GETGRGID_R 0 CACHE INTERNAL "")
    set(LWS_HAVE_GETGRNAM_R 0 CACHE INTERNAL "")
    set(LWS_HAVE_GETPWUID_R 0 CACHE INTERNAL "")
    set(LWS_HAVE_GETPWNAM_R 0 CACHE INTERNAL "")
    set(LWS_HAVE_TIMEGM 0 CACHE INTERNAL "")

    # header files 
    set(LWS_HAVE_IN6ADDR_H 1 CACHE INTERNAL "")
    set(LWS_HAVE_MEMORY_H 1 CACHE INTERNAL "")
    set(LWS_HAVE_NETINET_IN_H 0 CACHE INTERNAL "")
    set(LWS_HAVE_STDINT_H 1 CACHE INTERNAL "")
    set(LWS_HAVE_STDLIB_H 1 CACHE INTERNAL "")
    set(LWS_HAVE_STRINGS_H 0 CACHE INTERNAL "")
    set(LWS_HAVE_STRING_H 1 CACHE INTERNAL "")
    set(LWS_HAVE_SYS_PRCTL_H 0 CACHE INTERNAL "")
    set(LWS_HAVE_SYS_SOCKET_H 0 CACHE INTERNAL "")
    set(LWS_HAVE_SYS_SOCKIO_H 0 CACHE INTERNAL "")
    set(LWS_HAVE_SYS_STAT_H 1 CACHE INTERNAL "")
    set(LWS_HAVE_SYS_TYPES_H 1 CACHE INTERNAL "")
    set(LWS_HAVE_UNISTD_H 0 CACHE INTERNAL "")
    set(LWS_HAVE_VFORK_H 0 CACHE INTERNAL "")
    set(LWS_HAVE_SYS_CAPABILITY_H 0 CACHE INTERNAL "")
    set(LWS_HAVE_MALLOC_H 1 CACHE INTERNAL "")
    set(LWS_HAVE_PTHREAD_H 0 CACHE INTERNAL "")
    set(LWS_HAVE_INTTYPES_H 1 CACHE INTERNAL "")
    set(LWS_HAVE_SYS_RESOURCE_H 0 CACHE INTERNAL "")

    # Inline keywords
    set(LWS_HAVE_inline 1 CACHE INTERNAL "")
    set(LWS_HAVE___inline__ 0 CACHE INTERNAL "")
    set(LWS_HAVE___inline 1 CACHE INTERNAL "")

    # malloc-related features (glibc specific, not on Windows)
    set(LWS_HAVE_MALLOC_TRIM 0 CACHE INTERNAL "")
    set(LWS_HAVE_MALLOC_USABLE_SIZE 0 CACHE INTERNAL "")

    # Windows-specific feature
    set(LWS_HAVE_WIN32_AFUNIX_H 1 CACHE INTERNAL "")

    # Capability lib (Linux only)
    set(HAVE_LIBCAP 0 CACHE INTERNAL "") # libcap related
    set(HAVE_CAP_SET_FLAG 0 CACHE INTERNAL "") # backup for specific check

    # Composite include check
    set(HAVE_STDLIB_H 1 CACHE INTERNAL "")
    set(HAVE_SYS_TYPES_H 1 CACHE INTERNAL "")
    set(HAVE_STRING_H 1 CACHE INTERNAL "")

    # Type checks
    set(LWS_HAS_INTPTR_T 1 CACHE INTERNAL "")
    set(LWS_HAS_GETOPT_LONG 0 CACHE INTERNAL "")
    set(LWS_HAVE_RTA_PREF 0 CACHE INTERNAL "")
    set(LWS_HAVE_SUSECONDS_T 0 CACHE INTERNAL "")
    set(LWS_HAVE_PIPE2 0 CACHE INTERNAL "")
    set(LWS_HAVE_TCP_USER_TIMEOUT 0 CACHE INTERNAL "")

endif()

option(LWS_WITH_SHARED "Option" OFF)
option(LWS_WITH_STATIC "Option" ON)
option(LWS_WITH_SSL "Option" OFF)
option(LWS_WITHOUT_TESTAPPS "Option" ON)
option(LWS_WITHOUT_TEST_SERVER "Option" OFF)
option(LWS_WITHOUT_TEST_CLIENT "Option" OFF)
option(LWS_WITHOUT_TEST_PING "Option" OFF)

add_subdirectory(libwebsockets)

option(LWS_WITHOUT_TEST_PING "Option" OFF)

ExternalProject_Add(libjpeg-turbo
    SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libjpeg-turbo
    BINARY_DIR ${CMAKE_BINARY_DIR}/libjpeg-turbo-build
    INSTALL_DIR ${CMAKE_BINARY_DIR}/libjpeg-turbo
    CMAKE_ARGS
        -DENABLE_SHARED=OFF
        -DWITH_SIMD=ON
        -DWITH_TURBOJPEG=ON

    BUILD_COMMAND ${CMAKE_COMMAND} --build <BINARY_DIR> --config ${CMAKE_BUILD_TYPE}
    INSTALL_COMMAND ${CMAKE_COMMAND} --install <BINARY_DIR> --prefix <INSTALL_DIR>
)